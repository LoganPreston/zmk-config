/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define LOW 1
#define RSE 2 
#define NAV 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |   E   |  R  |   T   |   |    Y   |  U  |  I  |  O  |  P  | DEL |
// |  ESC |  A  |  S  |   D   |  F  |   G   |   |    H   |  J  |  K  |  L  |  ;  |  '  |
// | SHFT |  Z  |  X  |   C   |  V  |   B   |   |    N   |  M  |  ,  |  .  |  /  | ENT |
//                    | LCTRL | GUI | L/SPC |   | R/BKSP | NAV | ALT |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E     &kp R    &kp T           &kp Y        &kp U   &kp I     &kp O   &kp P    &kp DEL
   &kp ESC   &kp A &kp S &kp D     &kp F    &kp G           &kp H        &kp J   &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C     &kp V    &kp B           &kp N        &kp M   &kp COMMA &kp DOT &kp FSLH &kp RET
                         &kp LCTRL &kp LGUI &lt LOW SPACE   &lt RSE BSPC &mo NAV &kp RALT
                        >;
                };
                lower_layer { // glorified numpad. redundant space just for convenience
// -----------------------------------------------------------------------------------------
// |       |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
// |       |     |     |     | SPC |     |   |  *  |  4  |  5  |  6  |  +  |  =  |
// | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |  /  |  1  |  2  |  3  |  -  |     |
//                     |     |     |     |   |     |  0  |  .  |
                        bindings = <
   &trans     &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6    &kp N7  &kp N8 &kp N9 &kp N0    &trans
   &trans     &none        &none        &none        &kp SPACE    &none          &kp ASTRK &kp N4  &kp N5 &kp N6 &kp PLUS  &kp EQUAL 
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp FSLH  &kp N1  &kp N2 &kp N3 &kp MINUS &trans 
                                        &trans       &trans       &trans         &trans    &kp N0  &kp DOT
                        >;
                };

                raise_layer { // symbols, no backspace since we can just leave layer
// -----------------------------------------------------------------------------------------
// |     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  | "|" |  =  |     |
// |  `  |  ~  |  /  |  (  |  {  |  [  |   |  ]  |  }  |  )  |  \  |  -  |     |
// |     |     |     |     |  +  |  *  |   |  /  |  -  |     |     |  _  |     |
//                   |     |     |     |   |     |     |     |
                        bindings = <
   &trans    &kp EXCL  &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp PIPE &kp EQUAL &trans
   &kp GRAVE &kp TILDE &kp FSLH &kp LPAR &kp LBRC &kp LBKT    &kp RBKT  &kp RBRC  &kp RPAR  &kp BSLH &kp MINUS &trans
   &trans    &none     &none    &none    &kp PLUS &kp ASTRK   &kp FSLH  &kp MINUS &none     &none    &kp UNDER &trans
                                &trans   &trans   &trans      &trans    &trans    &trans
                        >;
                };

                nav_layer { // the extras
// -----------------------------------------------------------------------------------------
// |      | F1 | F2  | F3  | F4  |     |   |     | PgUp | HOME |      | PSCRN | INS |
// |      | F5 | F6  | F7  | F8  |     |   | LFT | DWN  |  UP  |  RGT |       |     |
// | CAPS | F9 | F10 | F11 | F12 |     |   |     | PgDn | END  |      |       |     |
//                  |     |     |     |   |     |      |      |                  
                        bindings = <
   &trans   &kp F1 &kp F2  &kp F3  &kp F4  &none    &none     &kp PG_UP &kp HOME &none     &kp PSCRN &kp INS
   &trans   &kp F5 &kp F6  &kp F7  &kp F8  &none    &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT &none     &trans
   &kp CAPS &kp F9 &kp F10 &kp F11 &kp F12 &none    &trans    &kp PG_DN &kp END  &none     &none     &trans
                         &trans  &trans  &trans   &trans    &trans    &trans 
                        >;
                };
        };
};
